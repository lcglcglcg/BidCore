// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: detail_info.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "detail_info.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace pxene {
namespace proto {

namespace {

const ::google::protobuf::Descriptor* DetailReqMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DetailReqMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* DetailReqMessage_ImpDetail_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DetailReqMessage_ImpDetail_reflection_ = NULL;
const ::google::protobuf::Descriptor* DetailReqMessage_ImpDetail_Policy_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DetailReqMessage_ImpDetail_Policy_reflection_ = NULL;
const ::google::protobuf::Descriptor* DetailReqMessage_ImpDetail_Creative_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DetailReqMessage_ImpDetail_Creative_reflection_ = NULL;
const ::google::protobuf::Descriptor* DetailReqMessage_Policy_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DetailReqMessage_Policy_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_detail_5finfo_2eproto() {
  protobuf_AddDesc_detail_5finfo_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "detail_info.proto");
  GOOGLE_CHECK(file != NULL);
  DetailReqMessage_descriptor_ = file->message_type(0);
  static const int DetailReqMessage_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetailReqMessage, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetailReqMessage, bid_server_flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetailReqMessage, requestid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetailReqMessage, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetailReqMessage, adxid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetailReqMessage, appid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetailReqMessage, devicetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetailReqMessage, os_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetailReqMessage, city_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetailReqMessage, connectiontype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetailReqMessage, carrier_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetailReqMessage, nbr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetailReqMessage, impbiddetail_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetailReqMessage, policies_),
  };
  DetailReqMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DetailReqMessage_descriptor_,
      DetailReqMessage::default_instance_,
      DetailReqMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetailReqMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetailReqMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DetailReqMessage));
  DetailReqMessage_ImpDetail_descriptor_ = DetailReqMessage_descriptor_->nested_type(0);
  static const int DetailReqMessage_ImpDetail_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetailReqMessage_ImpDetail, impid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetailReqMessage_ImpDetail, nbr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetailReqMessage_ImpDetail, policies_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetailReqMessage_ImpDetail, creatives_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetailReqMessage_ImpDetail, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetailReqMessage_ImpDetail, width_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetailReqMessage_ImpDetail, height_),
  };
  DetailReqMessage_ImpDetail_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DetailReqMessage_ImpDetail_descriptor_,
      DetailReqMessage_ImpDetail::default_instance_,
      DetailReqMessage_ImpDetail_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetailReqMessage_ImpDetail, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetailReqMessage_ImpDetail, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DetailReqMessage_ImpDetail));
  DetailReqMessage_ImpDetail_Policy_descriptor_ = DetailReqMessage_ImpDetail_descriptor_->nested_type(0);
  static const int DetailReqMessage_ImpDetail_Policy_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetailReqMessage_ImpDetail_Policy, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetailReqMessage_ImpDetail_Policy, nbr_),
  };
  DetailReqMessage_ImpDetail_Policy_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DetailReqMessage_ImpDetail_Policy_descriptor_,
      DetailReqMessage_ImpDetail_Policy::default_instance_,
      DetailReqMessage_ImpDetail_Policy_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetailReqMessage_ImpDetail_Policy, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetailReqMessage_ImpDetail_Policy, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DetailReqMessage_ImpDetail_Policy));
  DetailReqMessage_ImpDetail_Creative_descriptor_ = DetailReqMessage_ImpDetail_descriptor_->nested_type(1);
  static const int DetailReqMessage_ImpDetail_Creative_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetailReqMessage_ImpDetail_Creative, mapid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetailReqMessage_ImpDetail_Creative, nbr_),
  };
  DetailReqMessage_ImpDetail_Creative_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DetailReqMessage_ImpDetail_Creative_descriptor_,
      DetailReqMessage_ImpDetail_Creative::default_instance_,
      DetailReqMessage_ImpDetail_Creative_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetailReqMessage_ImpDetail_Creative, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetailReqMessage_ImpDetail_Creative, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DetailReqMessage_ImpDetail_Creative));
  DetailReqMessage_Policy_descriptor_ = DetailReqMessage_descriptor_->nested_type(1);
  static const int DetailReqMessage_Policy_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetailReqMessage_Policy, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetailReqMessage_Policy, nbr_),
  };
  DetailReqMessage_Policy_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DetailReqMessage_Policy_descriptor_,
      DetailReqMessage_Policy::default_instance_,
      DetailReqMessage_Policy_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetailReqMessage_Policy, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetailReqMessage_Policy, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DetailReqMessage_Policy));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_detail_5finfo_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DetailReqMessage_descriptor_, &DetailReqMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DetailReqMessage_ImpDetail_descriptor_, &DetailReqMessage_ImpDetail::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DetailReqMessage_ImpDetail_Policy_descriptor_, &DetailReqMessage_ImpDetail_Policy::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DetailReqMessage_ImpDetail_Creative_descriptor_, &DetailReqMessage_ImpDetail_Creative::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DetailReqMessage_Policy_descriptor_, &DetailReqMessage_Policy::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_detail_5finfo_2eproto() {
  delete DetailReqMessage::default_instance_;
  delete DetailReqMessage_reflection_;
  delete DetailReqMessage::_default_version_;
  delete DetailReqMessage_ImpDetail::default_instance_;
  delete DetailReqMessage_ImpDetail_reflection_;
  delete DetailReqMessage_ImpDetail_Policy::default_instance_;
  delete DetailReqMessage_ImpDetail_Policy_reflection_;
  delete DetailReqMessage_ImpDetail_Creative::default_instance_;
  delete DetailReqMessage_ImpDetail_Creative_reflection_;
  delete DetailReqMessage_Policy::default_instance_;
  delete DetailReqMessage_Policy_reflection_;
}

void protobuf_AddDesc_detail_5finfo_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021detail_info.proto\022\017com.pxene.proto\"\271\005\n"
    "\020DetailReqMessage\022\026\n\007version\030\001 \001(\t:\0051.0."
    "6\022\027\n\017bid_server_flag\030\002 \001(\t\022\021\n\trequestId\030"
    "\003 \001(\t\022\014\n\004time\030\004 \001(\003\022\r\n\005adxid\030\005 \001(\005\022\r\n\005ap"
    "pid\030\006 \001(\t\022\022\n\ndevicetype\030\t \001(\005\022\n\n\002os\030\n \001("
    "\005\022\014\n\004city\030\013 \001(\003\022\026\n\016connectiontype\030\014 \001(\005\022"
    "\017\n\007carrier\030\r \001(\005\022\013\n\003nbr\030\016 \001(\005\022A\n\014impBidD"
    "etail\030\017 \003(\0132+.com.pxene.proto.DetailReqM"
    "essage.ImpDetail\022:\n\010policies\030\020 \003(\0132(.com"
    ".pxene.proto.DetailReqMessage.Policy\032\256\002\n"
    "\tImpDetail\022\r\n\005impId\030\001 \002(\t\022\013\n\003nbr\030\002 \001(\005\022D"
    "\n\010policies\030\003 \003(\01322.com.pxene.proto.Detai"
    "lReqMessage.ImpDetail.Policy\022G\n\tcreative"
    "s\030\004 \003(\01324.com.pxene.proto.DetailReqMessa"
    "ge.ImpDetail.Creative\022\014\n\004type\030\005 \001(\005\022\r\n\005w"
    "idth\030\006 \001(\005\022\016\n\006height\030\007 \001(\005\032!\n\006Policy\022\n\n\002"
    "id\030\001 \002(\005\022\013\n\003nbr\030\002 \001(\005\032&\n\010Creative\022\r\n\005map"
    "id\030\001 \001(\005\022\013\n\003nbr\030\002 \001(\005\032!\n\006Policy\022\n\n\002id\030\001 "
    "\002(\005\022\013\n\003nbr\030\002 \001(\005", 736);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "detail_info.proto", &protobuf_RegisterTypes);
  DetailReqMessage::_default_version_ =
      new ::std::string("1.0.6", 5);
  DetailReqMessage::default_instance_ = new DetailReqMessage();
  DetailReqMessage_ImpDetail::default_instance_ = new DetailReqMessage_ImpDetail();
  DetailReqMessage_ImpDetail_Policy::default_instance_ = new DetailReqMessage_ImpDetail_Policy();
  DetailReqMessage_ImpDetail_Creative::default_instance_ = new DetailReqMessage_ImpDetail_Creative();
  DetailReqMessage_Policy::default_instance_ = new DetailReqMessage_Policy();
  DetailReqMessage::default_instance_->InitAsDefaultInstance();
  DetailReqMessage_ImpDetail::default_instance_->InitAsDefaultInstance();
  DetailReqMessage_ImpDetail_Policy::default_instance_->InitAsDefaultInstance();
  DetailReqMessage_ImpDetail_Creative::default_instance_->InitAsDefaultInstance();
  DetailReqMessage_Policy::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_detail_5finfo_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_detail_5finfo_2eproto {
  StaticDescriptorInitializer_detail_5finfo_2eproto() {
    protobuf_AddDesc_detail_5finfo_2eproto();
  }
} static_descriptor_initializer_detail_5finfo_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int DetailReqMessage_ImpDetail_Policy::kIdFieldNumber;
const int DetailReqMessage_ImpDetail_Policy::kNbrFieldNumber;
#endif  // !_MSC_VER

DetailReqMessage_ImpDetail_Policy::DetailReqMessage_ImpDetail_Policy()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.pxene.proto.DetailReqMessage.ImpDetail.Policy)
}

void DetailReqMessage_ImpDetail_Policy::InitAsDefaultInstance() {
}

DetailReqMessage_ImpDetail_Policy::DetailReqMessage_ImpDetail_Policy(const DetailReqMessage_ImpDetail_Policy& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.pxene.proto.DetailReqMessage.ImpDetail.Policy)
}

void DetailReqMessage_ImpDetail_Policy::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  nbr_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DetailReqMessage_ImpDetail_Policy::~DetailReqMessage_ImpDetail_Policy() {
  // @@protoc_insertion_point(destructor:com.pxene.proto.DetailReqMessage.ImpDetail.Policy)
  SharedDtor();
}

void DetailReqMessage_ImpDetail_Policy::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DetailReqMessage_ImpDetail_Policy::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DetailReqMessage_ImpDetail_Policy::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DetailReqMessage_ImpDetail_Policy_descriptor_;
}

const DetailReqMessage_ImpDetail_Policy& DetailReqMessage_ImpDetail_Policy::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_detail_5finfo_2eproto();
  return *default_instance_;
}

DetailReqMessage_ImpDetail_Policy* DetailReqMessage_ImpDetail_Policy::default_instance_ = NULL;

DetailReqMessage_ImpDetail_Policy* DetailReqMessage_ImpDetail_Policy::New() const {
  return new DetailReqMessage_ImpDetail_Policy;
}

void DetailReqMessage_ImpDetail_Policy::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<DetailReqMessage_ImpDetail_Policy*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, nbr_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DetailReqMessage_ImpDetail_Policy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.pxene.proto.DetailReqMessage.ImpDetail.Policy)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_nbr;
        break;
      }

      // optional int32 nbr = 2;
      case 2: {
        if (tag == 16) {
         parse_nbr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nbr_)));
          set_has_nbr();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.pxene.proto.DetailReqMessage.ImpDetail.Policy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.pxene.proto.DetailReqMessage.ImpDetail.Policy)
  return false;
#undef DO_
}

void DetailReqMessage_ImpDetail_Policy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.pxene.proto.DetailReqMessage.ImpDetail.Policy)
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 nbr = 2;
  if (has_nbr()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nbr(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.pxene.proto.DetailReqMessage.ImpDetail.Policy)
}

::google::protobuf::uint8* DetailReqMessage_ImpDetail_Policy::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.pxene.proto.DetailReqMessage.ImpDetail.Policy)
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 nbr = 2;
  if (has_nbr()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nbr(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.pxene.proto.DetailReqMessage.ImpDetail.Policy)
  return target;
}

int DetailReqMessage_ImpDetail_Policy::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 nbr = 2;
    if (has_nbr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nbr());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DetailReqMessage_ImpDetail_Policy::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DetailReqMessage_ImpDetail_Policy* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DetailReqMessage_ImpDetail_Policy*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DetailReqMessage_ImpDetail_Policy::MergeFrom(const DetailReqMessage_ImpDetail_Policy& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_nbr()) {
      set_nbr(from.nbr());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DetailReqMessage_ImpDetail_Policy::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetailReqMessage_ImpDetail_Policy::CopyFrom(const DetailReqMessage_ImpDetail_Policy& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetailReqMessage_ImpDetail_Policy::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void DetailReqMessage_ImpDetail_Policy::Swap(DetailReqMessage_ImpDetail_Policy* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(nbr_, other->nbr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DetailReqMessage_ImpDetail_Policy::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DetailReqMessage_ImpDetail_Policy_descriptor_;
  metadata.reflection = DetailReqMessage_ImpDetail_Policy_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int DetailReqMessage_ImpDetail_Creative::kMapidFieldNumber;
const int DetailReqMessage_ImpDetail_Creative::kNbrFieldNumber;
#endif  // !_MSC_VER

DetailReqMessage_ImpDetail_Creative::DetailReqMessage_ImpDetail_Creative()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.pxene.proto.DetailReqMessage.ImpDetail.Creative)
}

void DetailReqMessage_ImpDetail_Creative::InitAsDefaultInstance() {
}

DetailReqMessage_ImpDetail_Creative::DetailReqMessage_ImpDetail_Creative(const DetailReqMessage_ImpDetail_Creative& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.pxene.proto.DetailReqMessage.ImpDetail.Creative)
}

void DetailReqMessage_ImpDetail_Creative::SharedCtor() {
  _cached_size_ = 0;
  mapid_ = 0;
  nbr_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DetailReqMessage_ImpDetail_Creative::~DetailReqMessage_ImpDetail_Creative() {
  // @@protoc_insertion_point(destructor:com.pxene.proto.DetailReqMessage.ImpDetail.Creative)
  SharedDtor();
}

void DetailReqMessage_ImpDetail_Creative::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DetailReqMessage_ImpDetail_Creative::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DetailReqMessage_ImpDetail_Creative::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DetailReqMessage_ImpDetail_Creative_descriptor_;
}

const DetailReqMessage_ImpDetail_Creative& DetailReqMessage_ImpDetail_Creative::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_detail_5finfo_2eproto();
  return *default_instance_;
}

DetailReqMessage_ImpDetail_Creative* DetailReqMessage_ImpDetail_Creative::default_instance_ = NULL;

DetailReqMessage_ImpDetail_Creative* DetailReqMessage_ImpDetail_Creative::New() const {
  return new DetailReqMessage_ImpDetail_Creative;
}

void DetailReqMessage_ImpDetail_Creative::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<DetailReqMessage_ImpDetail_Creative*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(mapid_, nbr_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DetailReqMessage_ImpDetail_Creative::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.pxene.proto.DetailReqMessage.ImpDetail.Creative)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 mapid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mapid_)));
          set_has_mapid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_nbr;
        break;
      }

      // optional int32 nbr = 2;
      case 2: {
        if (tag == 16) {
         parse_nbr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nbr_)));
          set_has_nbr();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.pxene.proto.DetailReqMessage.ImpDetail.Creative)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.pxene.proto.DetailReqMessage.ImpDetail.Creative)
  return false;
#undef DO_
}

void DetailReqMessage_ImpDetail_Creative::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.pxene.proto.DetailReqMessage.ImpDetail.Creative)
  // optional int32 mapid = 1;
  if (has_mapid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->mapid(), output);
  }

  // optional int32 nbr = 2;
  if (has_nbr()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nbr(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.pxene.proto.DetailReqMessage.ImpDetail.Creative)
}

::google::protobuf::uint8* DetailReqMessage_ImpDetail_Creative::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.pxene.proto.DetailReqMessage.ImpDetail.Creative)
  // optional int32 mapid = 1;
  if (has_mapid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->mapid(), target);
  }

  // optional int32 nbr = 2;
  if (has_nbr()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nbr(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.pxene.proto.DetailReqMessage.ImpDetail.Creative)
  return target;
}

int DetailReqMessage_ImpDetail_Creative::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 mapid = 1;
    if (has_mapid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mapid());
    }

    // optional int32 nbr = 2;
    if (has_nbr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nbr());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DetailReqMessage_ImpDetail_Creative::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DetailReqMessage_ImpDetail_Creative* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DetailReqMessage_ImpDetail_Creative*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DetailReqMessage_ImpDetail_Creative::MergeFrom(const DetailReqMessage_ImpDetail_Creative& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mapid()) {
      set_mapid(from.mapid());
    }
    if (from.has_nbr()) {
      set_nbr(from.nbr());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DetailReqMessage_ImpDetail_Creative::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetailReqMessage_ImpDetail_Creative::CopyFrom(const DetailReqMessage_ImpDetail_Creative& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetailReqMessage_ImpDetail_Creative::IsInitialized() const {

  return true;
}

void DetailReqMessage_ImpDetail_Creative::Swap(DetailReqMessage_ImpDetail_Creative* other) {
  if (other != this) {
    std::swap(mapid_, other->mapid_);
    std::swap(nbr_, other->nbr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DetailReqMessage_ImpDetail_Creative::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DetailReqMessage_ImpDetail_Creative_descriptor_;
  metadata.reflection = DetailReqMessage_ImpDetail_Creative_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int DetailReqMessage_ImpDetail::kImpIdFieldNumber;
const int DetailReqMessage_ImpDetail::kNbrFieldNumber;
const int DetailReqMessage_ImpDetail::kPoliciesFieldNumber;
const int DetailReqMessage_ImpDetail::kCreativesFieldNumber;
const int DetailReqMessage_ImpDetail::kTypeFieldNumber;
const int DetailReqMessage_ImpDetail::kWidthFieldNumber;
const int DetailReqMessage_ImpDetail::kHeightFieldNumber;
#endif  // !_MSC_VER

DetailReqMessage_ImpDetail::DetailReqMessage_ImpDetail()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.pxene.proto.DetailReqMessage.ImpDetail)
}

void DetailReqMessage_ImpDetail::InitAsDefaultInstance() {
}

DetailReqMessage_ImpDetail::DetailReqMessage_ImpDetail(const DetailReqMessage_ImpDetail& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.pxene.proto.DetailReqMessage.ImpDetail)
}

void DetailReqMessage_ImpDetail::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  impid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nbr_ = 0;
  type_ = 0;
  width_ = 0;
  height_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DetailReqMessage_ImpDetail::~DetailReqMessage_ImpDetail() {
  // @@protoc_insertion_point(destructor:com.pxene.proto.DetailReqMessage.ImpDetail)
  SharedDtor();
}

void DetailReqMessage_ImpDetail::SharedDtor() {
  if (impid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete impid_;
  }
  if (this != default_instance_) {
  }
}

void DetailReqMessage_ImpDetail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DetailReqMessage_ImpDetail::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DetailReqMessage_ImpDetail_descriptor_;
}

const DetailReqMessage_ImpDetail& DetailReqMessage_ImpDetail::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_detail_5finfo_2eproto();
  return *default_instance_;
}

DetailReqMessage_ImpDetail* DetailReqMessage_ImpDetail::default_instance_ = NULL;

DetailReqMessage_ImpDetail* DetailReqMessage_ImpDetail::New() const {
  return new DetailReqMessage_ImpDetail;
}

void DetailReqMessage_ImpDetail::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<DetailReqMessage_ImpDetail*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 115) {
    ZR_(nbr_, type_);
    ZR_(width_, height_);
    if (has_impid()) {
      if (impid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        impid_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  policies_.Clear();
  creatives_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DetailReqMessage_ImpDetail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.pxene.proto.DetailReqMessage.ImpDetail)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string impId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_impid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->impid().data(), this->impid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "impid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_nbr;
        break;
      }

      // optional int32 nbr = 2;
      case 2: {
        if (tag == 16) {
         parse_nbr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nbr_)));
          set_has_nbr();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_policies;
        break;
      }

      // repeated .com.pxene.proto.DetailReqMessage.ImpDetail.Policy policies = 3;
      case 3: {
        if (tag == 26) {
         parse_policies:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_policies()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_policies;
        if (input->ExpectTag(34)) goto parse_creatives;
        break;
      }

      // repeated .com.pxene.proto.DetailReqMessage.ImpDetail.Creative creatives = 4;
      case 4: {
        if (tag == 34) {
         parse_creatives:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_creatives()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_creatives;
        if (input->ExpectTag(40)) goto parse_type;
        break;
      }

      // optional int32 type = 5;
      case 5: {
        if (tag == 40) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_width;
        break;
      }

      // optional int32 width = 6;
      case 6: {
        if (tag == 48) {
         parse_width:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_)));
          set_has_width();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_height;
        break;
      }

      // optional int32 height = 7;
      case 7: {
        if (tag == 56) {
         parse_height:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &height_)));
          set_has_height();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.pxene.proto.DetailReqMessage.ImpDetail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.pxene.proto.DetailReqMessage.ImpDetail)
  return false;
#undef DO_
}

void DetailReqMessage_ImpDetail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.pxene.proto.DetailReqMessage.ImpDetail)
  // required string impId = 1;
  if (has_impid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->impid().data(), this->impid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "impid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->impid(), output);
  }

  // optional int32 nbr = 2;
  if (has_nbr()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nbr(), output);
  }

  // repeated .com.pxene.proto.DetailReqMessage.ImpDetail.Policy policies = 3;
  for (int i = 0; i < this->policies_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->policies(i), output);
  }

  // repeated .com.pxene.proto.DetailReqMessage.ImpDetail.Creative creatives = 4;
  for (int i = 0; i < this->creatives_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->creatives(i), output);
  }

  // optional int32 type = 5;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->type(), output);
  }

  // optional int32 width = 6;
  if (has_width()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->width(), output);
  }

  // optional int32 height = 7;
  if (has_height()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->height(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.pxene.proto.DetailReqMessage.ImpDetail)
}

::google::protobuf::uint8* DetailReqMessage_ImpDetail::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.pxene.proto.DetailReqMessage.ImpDetail)
  // required string impId = 1;
  if (has_impid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->impid().data(), this->impid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "impid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->impid(), target);
  }

  // optional int32 nbr = 2;
  if (has_nbr()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nbr(), target);
  }

  // repeated .com.pxene.proto.DetailReqMessage.ImpDetail.Policy policies = 3;
  for (int i = 0; i < this->policies_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->policies(i), target);
  }

  // repeated .com.pxene.proto.DetailReqMessage.ImpDetail.Creative creatives = 4;
  for (int i = 0; i < this->creatives_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->creatives(i), target);
  }

  // optional int32 type = 5;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->type(), target);
  }

  // optional int32 width = 6;
  if (has_width()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->width(), target);
  }

  // optional int32 height = 7;
  if (has_height()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->height(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.pxene.proto.DetailReqMessage.ImpDetail)
  return target;
}

int DetailReqMessage_ImpDetail::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string impId = 1;
    if (has_impid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->impid());
    }

    // optional int32 nbr = 2;
    if (has_nbr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nbr());
    }

    // optional int32 type = 5;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional int32 width = 6;
    if (has_width()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->width());
    }

    // optional int32 height = 7;
    if (has_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->height());
    }

  }
  // repeated .com.pxene.proto.DetailReqMessage.ImpDetail.Policy policies = 3;
  total_size += 1 * this->policies_size();
  for (int i = 0; i < this->policies_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->policies(i));
  }

  // repeated .com.pxene.proto.DetailReqMessage.ImpDetail.Creative creatives = 4;
  total_size += 1 * this->creatives_size();
  for (int i = 0; i < this->creatives_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->creatives(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DetailReqMessage_ImpDetail::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DetailReqMessage_ImpDetail* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DetailReqMessage_ImpDetail*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DetailReqMessage_ImpDetail::MergeFrom(const DetailReqMessage_ImpDetail& from) {
  GOOGLE_CHECK_NE(&from, this);
  policies_.MergeFrom(from.policies_);
  creatives_.MergeFrom(from.creatives_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_impid()) {
      set_impid(from.impid());
    }
    if (from.has_nbr()) {
      set_nbr(from.nbr());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_width()) {
      set_width(from.width());
    }
    if (from.has_height()) {
      set_height(from.height());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DetailReqMessage_ImpDetail::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetailReqMessage_ImpDetail::CopyFrom(const DetailReqMessage_ImpDetail& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetailReqMessage_ImpDetail::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->policies())) return false;
  return true;
}

void DetailReqMessage_ImpDetail::Swap(DetailReqMessage_ImpDetail* other) {
  if (other != this) {
    std::swap(impid_, other->impid_);
    std::swap(nbr_, other->nbr_);
    policies_.Swap(&other->policies_);
    creatives_.Swap(&other->creatives_);
    std::swap(type_, other->type_);
    std::swap(width_, other->width_);
    std::swap(height_, other->height_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DetailReqMessage_ImpDetail::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DetailReqMessage_ImpDetail_descriptor_;
  metadata.reflection = DetailReqMessage_ImpDetail_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int DetailReqMessage_Policy::kIdFieldNumber;
const int DetailReqMessage_Policy::kNbrFieldNumber;
#endif  // !_MSC_VER

DetailReqMessage_Policy::DetailReqMessage_Policy()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.pxene.proto.DetailReqMessage.Policy)
}

void DetailReqMessage_Policy::InitAsDefaultInstance() {
}

DetailReqMessage_Policy::DetailReqMessage_Policy(const DetailReqMessage_Policy& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.pxene.proto.DetailReqMessage.Policy)
}

void DetailReqMessage_Policy::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  nbr_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DetailReqMessage_Policy::~DetailReqMessage_Policy() {
  // @@protoc_insertion_point(destructor:com.pxene.proto.DetailReqMessage.Policy)
  SharedDtor();
}

void DetailReqMessage_Policy::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DetailReqMessage_Policy::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DetailReqMessage_Policy::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DetailReqMessage_Policy_descriptor_;
}

const DetailReqMessage_Policy& DetailReqMessage_Policy::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_detail_5finfo_2eproto();
  return *default_instance_;
}

DetailReqMessage_Policy* DetailReqMessage_Policy::default_instance_ = NULL;

DetailReqMessage_Policy* DetailReqMessage_Policy::New() const {
  return new DetailReqMessage_Policy;
}

void DetailReqMessage_Policy::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<DetailReqMessage_Policy*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, nbr_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DetailReqMessage_Policy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.pxene.proto.DetailReqMessage.Policy)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_nbr;
        break;
      }

      // optional int32 nbr = 2;
      case 2: {
        if (tag == 16) {
         parse_nbr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nbr_)));
          set_has_nbr();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.pxene.proto.DetailReqMessage.Policy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.pxene.proto.DetailReqMessage.Policy)
  return false;
#undef DO_
}

void DetailReqMessage_Policy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.pxene.proto.DetailReqMessage.Policy)
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 nbr = 2;
  if (has_nbr()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nbr(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.pxene.proto.DetailReqMessage.Policy)
}

::google::protobuf::uint8* DetailReqMessage_Policy::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.pxene.proto.DetailReqMessage.Policy)
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 nbr = 2;
  if (has_nbr()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nbr(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.pxene.proto.DetailReqMessage.Policy)
  return target;
}

int DetailReqMessage_Policy::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 nbr = 2;
    if (has_nbr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nbr());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DetailReqMessage_Policy::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DetailReqMessage_Policy* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DetailReqMessage_Policy*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DetailReqMessage_Policy::MergeFrom(const DetailReqMessage_Policy& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_nbr()) {
      set_nbr(from.nbr());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DetailReqMessage_Policy::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetailReqMessage_Policy::CopyFrom(const DetailReqMessage_Policy& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetailReqMessage_Policy::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void DetailReqMessage_Policy::Swap(DetailReqMessage_Policy* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(nbr_, other->nbr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DetailReqMessage_Policy::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DetailReqMessage_Policy_descriptor_;
  metadata.reflection = DetailReqMessage_Policy_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

::std::string* DetailReqMessage::_default_version_ = NULL;
#ifndef _MSC_VER
const int DetailReqMessage::kVersionFieldNumber;
const int DetailReqMessage::kBidServerFlagFieldNumber;
const int DetailReqMessage::kRequestIdFieldNumber;
const int DetailReqMessage::kTimeFieldNumber;
const int DetailReqMessage::kAdxidFieldNumber;
const int DetailReqMessage::kAppidFieldNumber;
const int DetailReqMessage::kDevicetypeFieldNumber;
const int DetailReqMessage::kOsFieldNumber;
const int DetailReqMessage::kCityFieldNumber;
const int DetailReqMessage::kConnectiontypeFieldNumber;
const int DetailReqMessage::kCarrierFieldNumber;
const int DetailReqMessage::kNbrFieldNumber;
const int DetailReqMessage::kImpBidDetailFieldNumber;
const int DetailReqMessage::kPoliciesFieldNumber;
#endif  // !_MSC_VER

DetailReqMessage::DetailReqMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.pxene.proto.DetailReqMessage)
}

void DetailReqMessage::InitAsDefaultInstance() {
}

DetailReqMessage::DetailReqMessage(const DetailReqMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.pxene.proto.DetailReqMessage)
}

void DetailReqMessage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  version_ = const_cast< ::std::string*>(_default_version_);
  bid_server_flag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requestid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_ = GOOGLE_LONGLONG(0);
  adxid_ = 0;
  appid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devicetype_ = 0;
  os_ = 0;
  city_ = GOOGLE_LONGLONG(0);
  connectiontype_ = 0;
  carrier_ = 0;
  nbr_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DetailReqMessage::~DetailReqMessage() {
  // @@protoc_insertion_point(destructor:com.pxene.proto.DetailReqMessage)
  SharedDtor();
}

void DetailReqMessage::SharedDtor() {
  if (version_ != _default_version_) {
    delete version_;
  }
  if (bid_server_flag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete bid_server_flag_;
  }
  if (requestid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete requestid_;
  }
  if (appid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete appid_;
  }
  if (this != default_instance_) {
  }
}

void DetailReqMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DetailReqMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DetailReqMessage_descriptor_;
}

const DetailReqMessage& DetailReqMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_detail_5finfo_2eproto();
  return *default_instance_;
}

DetailReqMessage* DetailReqMessage::default_instance_ = NULL;

DetailReqMessage* DetailReqMessage::New() const {
  return new DetailReqMessage;
}

void DetailReqMessage::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<DetailReqMessage*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(adxid_, devicetype_);
    if (has_version()) {
      if (version_ != _default_version_) {
        version_->assign(*_default_version_);
      }
    }
    if (has_bid_server_flag()) {
      if (bid_server_flag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        bid_server_flag_->clear();
      }
    }
    if (has_requestid()) {
      if (requestid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        requestid_->clear();
      }
    }
    time_ = GOOGLE_LONGLONG(0);
    if (has_appid()) {
      if (appid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        appid_->clear();
      }
    }
    os_ = 0;
  }
  if (_has_bits_[8 / 32] & 3840) {
    ZR_(connectiontype_, nbr_);
    city_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  impbiddetail_.Clear();
  policies_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DetailReqMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.pxene.proto.DetailReqMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string version = 1 [default = "1.0.6"];
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->version().data(), this->version().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "version");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_bid_server_flag;
        break;
      }

      // optional string bid_server_flag = 2;
      case 2: {
        if (tag == 18) {
         parse_bid_server_flag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bid_server_flag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bid_server_flag().data(), this->bid_server_flag().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bid_server_flag");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_requestId;
        break;
      }

      // optional string requestId = 3;
      case 3: {
        if (tag == 26) {
         parse_requestId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_requestid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->requestid().data(), this->requestid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "requestid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_time;
        break;
      }

      // optional int64 time = 4;
      case 4: {
        if (tag == 32) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_adxid;
        break;
      }

      // optional int32 adxid = 5;
      case 5: {
        if (tag == 40) {
         parse_adxid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &adxid_)));
          set_has_adxid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_appid;
        break;
      }

      // optional string appid = 6;
      case 6: {
        if (tag == 50) {
         parse_appid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appid().data(), this->appid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "appid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_devicetype;
        break;
      }

      // optional int32 devicetype = 9;
      case 9: {
        if (tag == 72) {
         parse_devicetype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &devicetype_)));
          set_has_devicetype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_os;
        break;
      }

      // optional int32 os = 10;
      case 10: {
        if (tag == 80) {
         parse_os:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &os_)));
          set_has_os();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_city;
        break;
      }

      // optional int64 city = 11;
      case 11: {
        if (tag == 88) {
         parse_city:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &city_)));
          set_has_city();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_connectiontype;
        break;
      }

      // optional int32 connectiontype = 12;
      case 12: {
        if (tag == 96) {
         parse_connectiontype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &connectiontype_)));
          set_has_connectiontype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_carrier;
        break;
      }

      // optional int32 carrier = 13;
      case 13: {
        if (tag == 104) {
         parse_carrier:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &carrier_)));
          set_has_carrier();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_nbr;
        break;
      }

      // optional int32 nbr = 14;
      case 14: {
        if (tag == 112) {
         parse_nbr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nbr_)));
          set_has_nbr();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_impBidDetail;
        break;
      }

      // repeated .com.pxene.proto.DetailReqMessage.ImpDetail impBidDetail = 15;
      case 15: {
        if (tag == 122) {
         parse_impBidDetail:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_impbiddetail()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_impBidDetail;
        if (input->ExpectTag(130)) goto parse_policies;
        break;
      }

      // repeated .com.pxene.proto.DetailReqMessage.Policy policies = 16;
      case 16: {
        if (tag == 130) {
         parse_policies:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_policies()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_policies;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.pxene.proto.DetailReqMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.pxene.proto.DetailReqMessage)
  return false;
#undef DO_
}

void DetailReqMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.pxene.proto.DetailReqMessage)
  // optional string version = 1 [default = "1.0.6"];
  if (has_version()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->version(), output);
  }

  // optional string bid_server_flag = 2;
  if (has_bid_server_flag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bid_server_flag().data(), this->bid_server_flag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bid_server_flag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->bid_server_flag(), output);
  }

  // optional string requestId = 3;
  if (has_requestid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->requestid().data(), this->requestid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "requestid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->requestid(), output);
  }

  // optional int64 time = 4;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->time(), output);
  }

  // optional int32 adxid = 5;
  if (has_adxid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->adxid(), output);
  }

  // optional string appid = 6;
  if (has_appid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "appid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->appid(), output);
  }

  // optional int32 devicetype = 9;
  if (has_devicetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->devicetype(), output);
  }

  // optional int32 os = 10;
  if (has_os()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->os(), output);
  }

  // optional int64 city = 11;
  if (has_city()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->city(), output);
  }

  // optional int32 connectiontype = 12;
  if (has_connectiontype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->connectiontype(), output);
  }

  // optional int32 carrier = 13;
  if (has_carrier()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->carrier(), output);
  }

  // optional int32 nbr = 14;
  if (has_nbr()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->nbr(), output);
  }

  // repeated .com.pxene.proto.DetailReqMessage.ImpDetail impBidDetail = 15;
  for (int i = 0; i < this->impbiddetail_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->impbiddetail(i), output);
  }

  // repeated .com.pxene.proto.DetailReqMessage.Policy policies = 16;
  for (int i = 0; i < this->policies_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->policies(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.pxene.proto.DetailReqMessage)
}

::google::protobuf::uint8* DetailReqMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.pxene.proto.DetailReqMessage)
  // optional string version = 1 [default = "1.0.6"];
  if (has_version()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->version(), target);
  }

  // optional string bid_server_flag = 2;
  if (has_bid_server_flag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bid_server_flag().data(), this->bid_server_flag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bid_server_flag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->bid_server_flag(), target);
  }

  // optional string requestId = 3;
  if (has_requestid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->requestid().data(), this->requestid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "requestid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->requestid(), target);
  }

  // optional int64 time = 4;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->time(), target);
  }

  // optional int32 adxid = 5;
  if (has_adxid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->adxid(), target);
  }

  // optional string appid = 6;
  if (has_appid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "appid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->appid(), target);
  }

  // optional int32 devicetype = 9;
  if (has_devicetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->devicetype(), target);
  }

  // optional int32 os = 10;
  if (has_os()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->os(), target);
  }

  // optional int64 city = 11;
  if (has_city()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->city(), target);
  }

  // optional int32 connectiontype = 12;
  if (has_connectiontype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->connectiontype(), target);
  }

  // optional int32 carrier = 13;
  if (has_carrier()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->carrier(), target);
  }

  // optional int32 nbr = 14;
  if (has_nbr()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->nbr(), target);
  }

  // repeated .com.pxene.proto.DetailReqMessage.ImpDetail impBidDetail = 15;
  for (int i = 0; i < this->impbiddetail_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        15, this->impbiddetail(i), target);
  }

  // repeated .com.pxene.proto.DetailReqMessage.Policy policies = 16;
  for (int i = 0; i < this->policies_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        16, this->policies(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.pxene.proto.DetailReqMessage)
  return target;
}

int DetailReqMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string version = 1 [default = "1.0.6"];
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->version());
    }

    // optional string bid_server_flag = 2;
    if (has_bid_server_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bid_server_flag());
    }

    // optional string requestId = 3;
    if (has_requestid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->requestid());
    }

    // optional int64 time = 4;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->time());
    }

    // optional int32 adxid = 5;
    if (has_adxid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->adxid());
    }

    // optional string appid = 6;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appid());
    }

    // optional int32 devicetype = 9;
    if (has_devicetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->devicetype());
    }

    // optional int32 os = 10;
    if (has_os()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->os());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int64 city = 11;
    if (has_city()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->city());
    }

    // optional int32 connectiontype = 12;
    if (has_connectiontype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->connectiontype());
    }

    // optional int32 carrier = 13;
    if (has_carrier()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->carrier());
    }

    // optional int32 nbr = 14;
    if (has_nbr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nbr());
    }

  }
  // repeated .com.pxene.proto.DetailReqMessage.ImpDetail impBidDetail = 15;
  total_size += 1 * this->impbiddetail_size();
  for (int i = 0; i < this->impbiddetail_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->impbiddetail(i));
  }

  // repeated .com.pxene.proto.DetailReqMessage.Policy policies = 16;
  total_size += 2 * this->policies_size();
  for (int i = 0; i < this->policies_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->policies(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DetailReqMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DetailReqMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DetailReqMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DetailReqMessage::MergeFrom(const DetailReqMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  impbiddetail_.MergeFrom(from.impbiddetail_);
  policies_.MergeFrom(from.policies_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_version()) {
      set_version(from.version());
    }
    if (from.has_bid_server_flag()) {
      set_bid_server_flag(from.bid_server_flag());
    }
    if (from.has_requestid()) {
      set_requestid(from.requestid());
    }
    if (from.has_time()) {
      set_time(from.time());
    }
    if (from.has_adxid()) {
      set_adxid(from.adxid());
    }
    if (from.has_appid()) {
      set_appid(from.appid());
    }
    if (from.has_devicetype()) {
      set_devicetype(from.devicetype());
    }
    if (from.has_os()) {
      set_os(from.os());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_city()) {
      set_city(from.city());
    }
    if (from.has_connectiontype()) {
      set_connectiontype(from.connectiontype());
    }
    if (from.has_carrier()) {
      set_carrier(from.carrier());
    }
    if (from.has_nbr()) {
      set_nbr(from.nbr());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DetailReqMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetailReqMessage::CopyFrom(const DetailReqMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetailReqMessage::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->impbiddetail())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->policies())) return false;
  return true;
}

void DetailReqMessage::Swap(DetailReqMessage* other) {
  if (other != this) {
    std::swap(version_, other->version_);
    std::swap(bid_server_flag_, other->bid_server_flag_);
    std::swap(requestid_, other->requestid_);
    std::swap(time_, other->time_);
    std::swap(adxid_, other->adxid_);
    std::swap(appid_, other->appid_);
    std::swap(devicetype_, other->devicetype_);
    std::swap(os_, other->os_);
    std::swap(city_, other->city_);
    std::swap(connectiontype_, other->connectiontype_);
    std::swap(carrier_, other->carrier_);
    std::swap(nbr_, other->nbr_);
    impbiddetail_.Swap(&other->impbiddetail_);
    policies_.Swap(&other->policies_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DetailReqMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DetailReqMessage_descriptor_;
  metadata.reflection = DetailReqMessage_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace pxene
}  // namespace com

// @@protoc_insertion_point(global_scope)
